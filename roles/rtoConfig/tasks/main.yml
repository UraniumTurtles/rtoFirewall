#SPDX-License-Identifier: MIT-0
---
# tasks file for roles/rtoConfig
- name: get interface info
  fortinet.fortios.fortios_configuration_fact: 
    access_token: "{{ fortios_access_token }}"
    formatters:
      - name
      - ip
    selector: 'system_interface'
  register: interface_facts

- name: set fact
  set_fact:
    serial: "{{interface_facts.meta.serial}}"

- name: show facts 
  ansible.builtin.debug:
    msg: "{{interface_facts.meta.serial}}"

- name: remove default internal policy 
  fortinet.fortios.fortios_firewall_policy:
    access_token: "{{ fortios_access_token }}"
    state: "absent"
    firewall_policy:
      policyid: "1"

- name: remove guest wifi policy 
  fortinet.fortios.fortios_firewall_policy:
    access_token: "{{ fortios_access_token }}"
    state: "absent"
    firewall_policy:
      policyid: "2"
  when: serial is search("FWF40") or serial is search("FWF60")

- name: remove internal object
  fortinet.fortios.fortios_firewall_address:
    state: "absent"
    access_token: "{{ fortios_access_token }}"
    firewall_address:
      name: "internal"

- name: remove DHCP
  fortinet.fortios.fortios_system_dhcp_server:
    state: "absent"
    access_token: "{{ fortios_access_token }}"
    system_dhcp_server:
      id: "{{item.id}}"
  with_items: "{{dhcpServers}}"

- name: remove fortilink from 
  fortinet.fortios.fortios_system_ntp:
    access_token: "{{ fortios_access_token }}"
    system_ntp:
      server_mode: "disable"

- name: remove wifi from internal
  fortinet.fortios.fortios_system_switch_interface:
    state: "present"
    access_token: "{{ fortios_access_token }}"
    system_switch_interface:
      name: "{{ (interface_facts.meta.results | selectattr('ip', 'search', '192.168.1.99 255.255.255.0') | list | first).name }}"
      member: 
        - interface_name: "lan"
#      ip: "{{lan}}"

- name: remove fortilink
  fortinet.fortios.fortios_system_interface:
    state: "absent"
    access_token: "{{ fortios_access_token }}"
    system_interface:
      name: "fortilink"


- name: interface
  fortinet.fortios.fortios_system_interface:
    access_token: "{{ fortios_access_token }}"
    state: "present"
    system_interface:
      name: "internal"
      ip: "{{lan_gw}}/24"
#create address objects
- name: vpn address objects
  fortinet.fortios.fortios_firewall_address:
    state: "present"
    access_token: "{{ fortios_access_token }}"
    firewall_address:
      name: "{{item.name}}"
      type: "{{item.type}}"
      subnet: "{{item.address}}"
      allow_routing: "enable"
  with_items: "{{addrObject}}"

#create address groups
- name: address groups
  fortinet.fortios.fortios_firewall_addrgrp:
    state: "present"
    access_token: "{{ fortios_access_token }}"
    firewall_addrgrp:
      name: "{{item.name}}"
      member: 
        - name: "{{item.member}}"
  with_items: "{{addrGrp}}"

- name: initial sdwan non wifi
  fortinet.fortios.fortios_system_sdwan:
    access_token: "{{ fortios_access_token }}"
    system_sdwan:
      members:
        -
          seq_num: "0"
          interface: "a"
          cost: "5"
        -
          seq_num: "0"
          interface: "wan"
  when: serial is search("FWF40") or serial is search("FGT40")

- name: initial sdwan wifi
  fortinet.fortios.fortios_system_sdwan:
    access_token: "{{ fortios_access_token }}"
    system_sdwan:
      members:
        -
          seq_num: "0"
          interface: "wan2"
          cost: "5"
        -
          seq_num: "0"
          interface: "wan1"
  when: serial is search("FWF60") or serial is search("FGT60")

- name: VPN phase 1 main 40 series
  fortinet.fortios.fortios_vpn_ipsec_phase1_interface:
    state: "present"
    access_token: "{{ fortios_access_token }}"
    vpn_ipsec_phase1_interface:
      name: "{{item.name}}"
      type: "static"
      remote_gw: "{{item.remote_gw}}"
      interface: "wan"
      keylife: "28800"
      mode: "aggressive"
      peertype: "one"
      net_device: "disable"
      proposal: "aes256-sha1"
      localid: "{{clientID}}{{store}}-rto"
      dpd: "on-idle"
      dhgrp: "2"
      peerid: "{{item.peerid}}"
      psksecret: "{{pksecret}}"
      dpd_retryinterval: "60"
  with_items: "{{vpnPhase1Main}}"
  when: serial is search("FWF40") or serial is search("FGT40")

- name: VPN phase 1 main 60 series
  fortinet.fortios.fortios_vpn_ipsec_phase1_interface:
    state: "present"
    access_token: "{{ fortios_access_token }}"
    vpn_ipsec_phase1_interface:
      name: "{{item.name}}"
      type: "static"
      remote_gw: "{{item.remote_gw}}"
      interface: "wan1"
      keylife: "28800"
      mode: "aggressive"
      peertype: "one"
      net_device: "disable"
      proposal: "aes256-sha1"
      localid: "{{clientID}}{{store}}-rto"
      dpd: "on-idle"
      dhgrp: "2"
      peerid: "{{item.peerid}}"
      psksecret: "{{pksecret}}"
      dpd_retryinterval: "60"
  with_items: "{{vpnPhase1Main}}"
  when: serial is search("FWF60") or serial is search("FGT60")

- name: VPN phase 1 failover 40 series
  fortinet.fortios.fortios_vpn_ipsec_phase1_interface:
    state: "present"
    access_token: "{{ fortios_access_token }}"
    vpn_ipsec_phase1_interface:
      name: "{{item.name}}"
      type: "static"
      remote_gw: "{{item.remote_gw}}"
      interface: "a"
      keylife: "28800"
      mode: "aggressive"
      monitor: "{{item.monitor}}"
      monitor_hold_down_type: "delay"
      monitor_hold_down_delay: "15"
      peertype: "one"
      net_device: "disable"
      proposal: "aes256-sha1"
      localid: "{{clientID}}{{store}}-rto"
      dpd: "on-idle"
      dhgrp: "2"
      peerid: "{{item.peerid}}"
      psksecret: "{{pksecret}}"
      dpd_retryinterval: "60"
  with_items: "{{vpnPhase1Failover}}"
  when: serial is search("FWF40") or serial is search("FGT40")

- name: VPN phase 2 
  fortinet.fortios.fortios_vpn_ipsec_phase2_interface:
    state: "present"
    access_token: "{{ fortios_access_token }}"
    vpn_ipsec_phase2_interface:
      name: "{{item.name}}"
      phase1name: "{{item.phase1}}"
      proposal: "aes256-sha1"
      pfs: "disable"
      keepalive: "enable"
      src_addr_type: "name"
      dst_addr_type: "name"
      src_name: "{{item.source}}"
      dst_name: "{{item.remote}}"
      keylifeseconds: "28800"
  with_items: "{{vpnPhase2}}"

- name: sdwan 40 Series
  fortinet.fortios.fortios_system_sdwan:
    access_token: "{{ fortios_access_token }}"
    system_sdwan: 
      members:
          -
            seq_num: "0"
            interface: "wan"
            cost: "0"           
          -
            seq_num: "0"
            interface: "a"
            cost: "5"
          -
            seq_num: "0"
            interface: "High Touch 0_1"
            cost: "10"
            source: "{{ lan_gw }}"
          -
            seq_num: "0"
            interface: "High Touch 0_2"
            cost: "20"
            source: "{{ lan_gw }}" 
          -
            seq_num: "0"
            interface: "RSSSHOII_1"
            cost: "10"
            source: "{{ lan_gw }}"   
          -
            seq_num: "0"
            interface: "RSSSHOII_2"
            cost: "20"
            source: "{{ lan_gw }}"
          -
            seq_num: "0"
            interface: "ddc1-fw01_1"
            cost: "10"
            source: "{{ lan_gw }}" 
          -
            seq_num: "0"
            interface: "ddc1-fw01_2"
            cost: "20"
            source: "{{ lan_gw }}"     
      health_check:
      -
        name: "WAN_Failover"
        server: "8.8.8.8"
        interval: "5000"
        members:
          -
            seq_num: "1"
          -
            seq_num: "2"
        sla:
          -
            id: "1"
            latency_threshold: "500"
            jitter_threshold: "50"
            packetloss_threshold: "5" 
      -
        name: "HighTouch0_Failover"
        server: "172.19.0.1"
        interval: "5000"
        members:
          -
            seq_num: "3"
          -
            seq_num: "4"
        sla:
          -
            id: "1"
            latency_threshold: "500"
            jitter_threshold: "50"
            packetloss_threshold: "5"
      -
        name: "RSSSHOII_Failover"
        server: "172.25.1.1"
        interval: "5000"
        members:
          -
            seq_num: "5"
          -
            seq_num: "6"
        sla:
          -
            id: "1"
            latency_threshold: "500"
            jitter_threshold: "50"
            packetloss_threshold: "5"
      -
        name: "ddc1_fw01_Failover"
        server: "{{ cynergi_server }}"
        interval: "5000"
        members:
          -
            seq_num: "7"
          -
            seq_num: "8"
        sla:
          -
            id: "1"
            latency_threshold: "500"
            jitter_threshold: "50"
            packetloss_threshold: "5"
      service: 
        -
          name: "HighTouch0_Access"
          mode: "sla"
          id: "0"
          dst:
            -
              name: "High Touch 0_remote"
          src: 
            -
              name: "High Touch 0_local"
          sla:
            -
              health_check: "HighTouch0_Failover"
              #id: "1"
          priority_members:
            -
              seq_num: "3"
            -
              seq_num: "4"
        -
          name: "RSSSHOII_Access"
          mode: "sla"
          id: "0"
          dst:
            -
              name: "RSSS HO II_remote"
          src: 
            -
              name: "RSSS HO II_local"
          sla:
            -
              health_check: "RSSSHOII_Failover"
              #id: "1"
          priority_members:
            -
              seq_num: "5"
            -
              seq_num: "6"
        -
          name: "ddc1_fw01_Access"
          mode: "sla"
          id: "0"
          dst:
            -
              name: "ddc1-fw01_remote"
          src: 
            -
              name: "ddc1-fw01_local"
          sla:
            -
              health_check: "ddc1_fw01_Failover"
              #id: "1"
          priority_members:
            -
              seq_num: "7"
            -
              seq_num: "8"
        -
          name: "Internet_Access"
          mode: "sla"
          id: "0"
          dst:
            -
              name: "all"
          src: 
            -
              name: "all"
          sla:
            -
              health_check: "WAN_Failover"
              #id: "1"
          priority_members:
            -
              seq_num: "1"
            -
              seq_num: "2"
      status: "enable"             
  when: serial is search("FWF40") or serial is search("FGT40")

- name: Firewall Policies
  fortinet.fortios.fortios_firewall_policy:
    access_token: "{{ fortios_access_token }}"
    state: "present"
    firewall_policy:
      policyid: "0"
      name: "{{item.name}}"
      srcintf:
      -
        name: "{{item.srcint}}"
      dstintf:
      -
        name: "{{item.dstint}}"
      srcaddr:
      -
        name: "{{item.srcaddr}}"
      dstaddr:
      -
        name: "{{item.dstaddr}}"
      action: "accept"
      schedule: "always"
      service:
      -
        name: "ALL"
      nat: "{{item.nat}}"

- name: Set Route
  fortinet.fortios.fortios_router_static:
    access_token: "{{ fortios_access_token }}"
    state: "present"
    router_static:
      distance: "1"
      dst: "0.0.0.0/0.0.0.0"
      dynamic_gateway: "enable"
      gateway: "0.0.0.0"
      sdwan_zone:
        -
          name: "virtual-wan-link"

- name: Set System Settings
  fortios_system_global:
    access_token: "{{ fortios_access_token }}"
    system_global: 
      hostname: "{{clientID}}{{store}}-rto"
      admin_port: "8080"
      admin_sport: "10443"
      admintimeout: "30"
